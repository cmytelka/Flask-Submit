"""add role

Revision ID: 1738881855
Revises: 1738877914
Create Date: 2025-02-06 17:44:15.670363

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1738881855'
down_revision: Union[str, None] = '1738877914'
branch_labels: Union[str, Sequence[str], None] = ()
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('person', sa.Column('role', sa.String(), nullable=True))
    op.alter_column('person', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('person', 'username',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('person', 'password',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False)
    op.alter_column('submission', 'title',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('submission', 'title',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('person', 'password',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('person', 'username',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True)
    op.alter_column('person', 'last_name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_column('person', 'role')
    op.alter_column('decision', 'decision_text',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    # ### end Alembic commands ###
